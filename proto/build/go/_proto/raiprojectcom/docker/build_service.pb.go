// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raiprojectcom/docker/build_service.proto

/*
Package raiprojectcom_docker is a generated protocol buffer package.

It is generated from these files:
	raiprojectcom/docker/build_service.proto

It has these top-level messages:
	PushOptions
	DockerBuildRequest
	DockerBuildResponse
	ErrorStatus
*/
package raiprojectcom_docker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushOptions struct {
	UserName  string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	ImageName string `protobuf:"bytes,3,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
}

func (m *PushOptions) Reset()                    { *m = PushOptions{} }
func (m *PushOptions) String() string            { return proto.CompactTextString(m) }
func (*PushOptions) ProtoMessage()               {}
func (*PushOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PushOptions) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *PushOptions) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *PushOptions) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

type DockerBuildRequest struct {
	Id        string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ImageName string       `protobuf:"bytes,2,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	Content   string       `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Push      *PushOptions `protobuf:"bytes,4,opt,name=push" json:"push,omitempty"`
}

func (m *DockerBuildRequest) Reset()                    { *m = DockerBuildRequest{} }
func (m *DockerBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*DockerBuildRequest) ProtoMessage()               {}
func (*DockerBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DockerBuildRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DockerBuildRequest) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *DockerBuildRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DockerBuildRequest) GetPush() *PushOptions {
	if m != nil {
		return m.Push
	}
	return nil
}

type DockerBuildResponse struct {
	Id      string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Content string       `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Error   *ErrorStatus `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *DockerBuildResponse) Reset()                    { *m = DockerBuildResponse{} }
func (m *DockerBuildResponse) String() string            { return proto.CompactTextString(m) }
func (*DockerBuildResponse) ProtoMessage()               {}
func (*DockerBuildResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DockerBuildResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DockerBuildResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DockerBuildResponse) GetError() *ErrorStatus {
	if m != nil {
		return m.Error
	}
	return nil
}

type ErrorStatus struct {
	Message string                 `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Details []*google_protobuf.Any `protobuf:"bytes,2,rep,name=details" json:"details,omitempty"`
}

func (m *ErrorStatus) Reset()                    { *m = ErrorStatus{} }
func (m *ErrorStatus) String() string            { return proto.CompactTextString(m) }
func (*ErrorStatus) ProtoMessage()               {}
func (*ErrorStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ErrorStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ErrorStatus) GetDetails() []*google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*PushOptions)(nil), "raiprojectcom.docker.PushOptions")
	proto.RegisterType((*DockerBuildRequest)(nil), "raiprojectcom.docker.DockerBuildRequest")
	proto.RegisterType((*DockerBuildResponse)(nil), "raiprojectcom.docker.DockerBuildResponse")
	proto.RegisterType((*ErrorStatus)(nil), "raiprojectcom.docker.ErrorStatus")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DockerService service

type DockerServiceClient interface {
	Build(ctx context.Context, in *DockerBuildRequest, opts ...grpc.CallOption) (DockerService_BuildClient, error)
}

type dockerServiceClient struct {
	cc *grpc.ClientConn
}

func NewDockerServiceClient(cc *grpc.ClientConn) DockerServiceClient {
	return &dockerServiceClient{cc}
}

func (c *dockerServiceClient) Build(ctx context.Context, in *DockerBuildRequest, opts ...grpc.CallOption) (DockerService_BuildClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DockerService_serviceDesc.Streams[0], c.cc, "/raiprojectcom.docker.DockerService/Build", opts...)
	if err != nil {
		return nil, err
	}
	x := &dockerServiceBuildClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DockerService_BuildClient interface {
	Recv() (*DockerBuildResponse, error)
	grpc.ClientStream
}

type dockerServiceBuildClient struct {
	grpc.ClientStream
}

func (x *dockerServiceBuildClient) Recv() (*DockerBuildResponse, error) {
	m := new(DockerBuildResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for DockerService service

type DockerServiceServer interface {
	Build(*DockerBuildRequest, DockerService_BuildServer) error
}

func RegisterDockerServiceServer(s *grpc.Server, srv DockerServiceServer) {
	s.RegisterService(&_DockerService_serviceDesc, srv)
}

func _DockerService_Build_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DockerBuildRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DockerServiceServer).Build(m, &dockerServiceBuildServer{stream})
}

type DockerService_BuildServer interface {
	Send(*DockerBuildResponse) error
	grpc.ServerStream
}

type dockerServiceBuildServer struct {
	grpc.ServerStream
}

func (x *dockerServiceBuildServer) Send(m *DockerBuildResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DockerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raiprojectcom.docker.DockerService",
	HandlerType: (*DockerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Build",
			Handler:       _DockerService_Build_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "raiprojectcom/docker/build_service.proto",
}

func init() { proto.RegisterFile("raiprojectcom/docker/build_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4e, 0xe3, 0x30,
	0x10, 0xc6, 0x37, 0x69, 0xbb, 0x6d, 0x27, 0xda, 0x3d, 0x78, 0x7b, 0xc8, 0x16, 0x21, 0x95, 0x9c,
	0xc2, 0xc5, 0x41, 0x45, 0x88, 0x33, 0x08, 0xae, 0x80, 0xd2, 0x03, 0xc7, 0xe2, 0x26, 0x43, 0x6a,
	0x68, 0xe2, 0xd4, 0x76, 0x80, 0xbe, 0x07, 0x0f, 0x8c, 0x62, 0x37, 0x52, 0xff, 0x21, 0x71, 0x9c,
	0xf1, 0x6f, 0xe6, 0xfb, 0x66, 0xc6, 0x10, 0x4a, 0xc6, 0x4b, 0x29, 0x5e, 0x30, 0xd1, 0x89, 0xc8,
	0xa3, 0x54, 0x24, 0xaf, 0x28, 0xa3, 0x59, 0xc5, 0x17, 0xe9, 0x54, 0xa1, 0x7c, 0xe3, 0x09, 0xd2,
	0x52, 0x0a, 0x2d, 0xc8, 0x60, 0x8b, 0xa4, 0x96, 0x1c, 0xfe, 0xcf, 0x84, 0xc8, 0x16, 0x18, 0x19,
	0x66, 0x56, 0x3d, 0x47, 0xac, 0x58, 0xd9, 0x82, 0x00, 0xc1, 0x7b, 0xa8, 0xd4, 0xfc, 0xbe, 0xd4,
	0x5c, 0x14, 0x8a, 0x1c, 0x41, 0xbf, 0x52, 0x28, 0xa7, 0x05, 0xcb, 0xd1, 0x77, 0x46, 0x4e, 0xd8,
	0x8f, 0x7b, 0x75, 0xe2, 0x8e, 0xe5, 0x48, 0x86, 0xd0, 0x2b, 0x99, 0x52, 0xef, 0x42, 0xa6, 0xbe,
	0x6b, 0xdf, 0x9a, 0x98, 0x1c, 0x03, 0xf0, 0x9c, 0x65, 0x68, 0x2b, 0x5b, 0xe6, 0xb5, 0x6f, 0x32,
	0x75, 0x69, 0xf0, 0xe9, 0x00, 0xb9, 0x31, 0x66, 0xae, 0x6b, 0xd7, 0x31, 0x2e, 0x2b, 0x54, 0x9a,
	0xfc, 0x05, 0x97, 0xa7, 0x6b, 0x1d, 0x97, 0xef, 0x76, 0x71, 0x77, 0xba, 0x10, 0x1f, 0xba, 0x89,
	0x28, 0x34, 0x16, 0x7a, 0xad, 0xd0, 0x84, 0xe4, 0x02, 0xda, 0x65, 0xa5, 0xe6, 0x7e, 0x7b, 0xe4,
	0x84, 0xde, 0xf8, 0x84, 0x1e, 0x5a, 0x03, 0xdd, 0x18, 0x34, 0x36, 0x78, 0xf0, 0x01, 0xff, 0xb6,
	0x5c, 0xa9, 0x52, 0x14, 0x0a, 0xf7, 0x6c, 0x6d, 0xe8, 0xba, 0xdb, 0xba, 0x97, 0xd0, 0x41, 0x29,
	0x85, 0x34, 0x7e, 0xbe, 0x15, 0xbe, 0xad, 0x91, 0x89, 0x66, 0xba, 0x52, 0xb1, 0xe5, 0x83, 0x47,
	0xf0, 0x36, 0xb2, 0xb5, 0x42, 0x8e, 0x4a, 0xb1, 0xac, 0xd9, 0x7a, 0x13, 0x12, 0x0a, 0xdd, 0x14,
	0x35, 0xe3, 0x0b, 0xe5, 0xbb, 0xa3, 0x56, 0xe8, 0x8d, 0x07, 0xd4, 0x5e, 0x93, 0x36, 0xd7, 0xa4,
	0x57, 0xc5, 0x2a, 0x6e, 0xa0, 0xf1, 0x12, 0xfe, 0xd8, 0x91, 0x26, 0xf6, 0x63, 0x90, 0x27, 0xe8,
	0x98, 0xe9, 0x48, 0x78, 0xd8, 0xdc, 0xfe, 0x59, 0x86, 0xa7, 0x3f, 0x20, 0xed, 0xaa, 0x82, 0x5f,
	0x67, 0xce, 0xec, 0xb7, 0x71, 0x72, 0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0xae, 0xf1, 0x7a, 0xb1,
	0xa7, 0x02, 0x00, 0x00,
}
